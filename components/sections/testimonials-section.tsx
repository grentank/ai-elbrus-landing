"use client";

import useEmblaCarousel from "embla-carousel-react";
import Image from "next/image";
import { useCallback } from "react";

interface Testimonial {
  author: string;
  text: string;
  telegram: string;
  profilePicture: string;
}

const testimonials: Testimonial[] = [
  {
    author: "–î–µ–Ω–∏—Å –û—Å–æ—Ç–æ–≤",
    text: `–ü—Ä–æ—Å—Ç–æ –≤–æ üëç
–ö—É—Ä—Å –ø—Ä–µ–≤–∑–æ—à—ë–ª –≤—Å–µ –º–æ–∏ –æ–∂–∏–¥–∞–Ω–∏—è! –û–Ω –¥–∞–ª –Ω–µ —Ç–æ–ª—å–∫–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏ –ò–ò, –Ω–æ –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Å—Ä–∞–∑—É –ø—Ä–∏–º–µ–Ω—è—Ç—å. –û—á–µ–Ω—å –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ–¥–∞—á–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞: –æ—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –∫ —Å–ª–æ–∂–Ω–æ–º—É, —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –ø—Ä–∏–º–µ—Ä–æ–≤ –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π. –û—Å–æ–±–µ–Ω–Ω–æ —Ü–µ–Ω–Ω–æ, —á—Ç–æ –∫—É—Ä—Å —Å–æ—á–µ—Ç–∞–ª —Ç–µ–æ—Ä–∏—é –∏ –ø—Ä–∞–∫—Ç–∏–∫—É. –£–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –≤ —Ä–∞–±–æ—Ç–µ - –ø–æ–∫–∞–∑—ã–≤–∞—é —Å—Ç—É–¥–µ–Ω—Ç–∞–º Lovable –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –ò–ò –≤ –ø—Ä–æ–µ–∫—Ç—ã.`,
    telegram: "@osd3n",
    profilePicture: "denis.jpg",
  },
  {
    author: "–≠–¥—É–∞—Ä–¥ –ì—É—Ä–¥–∂–∏—è–Ω",
    text: `–ü–æ—Å–ª–µ –∫—É—Ä—Å–∞ —è –æ—á–µ–Ω—å –≤–æ–æ–¥—É—à–µ–≤–ª–µ–Ω, –æ—á–µ–Ω—å —Ö–æ—á–µ—Ç—Å—è –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –≤ —Å–≤–æ–µ–π –∫–æ–º–ø–∞–Ω–∏–∏. –ù–æ —É –Ω–∞—Å –∂–µ—Å—Ç–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–æ—Ñ—Ç–∞. –ü–æ—ç—Ç–æ–º—É –±—É–¥—É –ø—Ä–æ–±–æ–≤–∞—Ç—å –¥–æ–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å—Å—è.`,
    telegram: "@eddy_js",
    profilePicture: "eduard.jpg",
  },
  {
    author: "–ú–∞–∫—Å –ö–æ—à–µ—É—Ç–æ–≤",
    text: `–û—á–µ–Ω—å –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –∫–æ–Ω—Ü–µ–ø—Ü–∏—è —ç–º–±–µ–¥–¥–∏–Ω–≥–∞ –õ–õ–ú, –º–æ–∂–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –ª—é–±–æ–π –º–æ–¥–µ–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏, –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ç–æ—á–µ—á–µ–Ω–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –º–æ–¥–µ–ª–∏ –ø–æ–¥ —Å–µ–±—è.
–¢–∞–∫ –∂–µ –æ—á–µ–Ω—å –≤–ø–µ—á–∞—Ç–ª–∏–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ MCP-—Å–µ—Ä–≤–µ—Ä–æ–≤, —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å–≤–æ–µ–≥–æ Cursor. 
–ó–Ω–∞–Ω–∏—è —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –≤ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏ –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Ä–µ–≤—å—é PR –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏. –û—á–µ–Ω—å –¥–æ–≤–æ–ª–µ–Ω, –æ—Ç–∫—Ä—ã–ª –¥–ª—è —Å–µ–±—è —ç—Ç—É –∑–∞–≤–µ—Å—É, —Å—Ç–∞–ª –±–æ–ª—å—à–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å –Ω–µ–π—Ä–æ–Ω–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ) `,
    telegram: "@max_kosheutov",
    profilePicture: "max.jpg",
  },
  {
    author: "–ê–Ω–æ–Ω–∏–º–Ω—ã–π –æ—Ç–∑—ã–≤",
    text: `–∫—É—Ä—Å –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –º–æ–π –∑–∞–ø—Ä–æ—Å - –∑–∞–ø—Ä—ã–≥–Ω—É—Ç—å –Ω–∞ –≤–æ–ª–Ω—É —Ö–∞–π–ø–∞, –ø–æ–Ω–∏–º–∞—Ç—å —á—Ç–æ –æ–∑–Ω–∞—á–∞—é—Ç —ç—Ç–∏ —Å–ª–æ–≤–∞, –ø–∏—Å–∞—Ç—å —Å–≤–æ–∏—Ö –∞–≥–µ–Ω—Ç–æ–≤

–ø–µ—Ä–≤–∞—è –Ω–µ–¥–µ–ª—è - –≤–∞—É-—ç—Ñ—Ñ–µ–∫—Ç –æ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è AI-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤. 
–≤—Ç–æ—Ä–∞—è –Ω–µ–¥–µ–ª—è - AI-–∞–≥–µ–Ω—Ç—ã, RAG, LangChain –∏ LangGraph (–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞—Å—à–∏—Ä—è—é—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–æ–≤)`,
    telegram: "@anonymous",
    profilePicture: "profile.png",
  },
];

export default function TestimonialsSection() {
  const [emblaRef, emblaApi] = useEmblaCarousel({
    align: "start",
    loop: true,
    skipSnaps: false,
    inViewThreshold: 0.7,
  });

  const scrollPrev = useCallback(() => {
    if (emblaApi) emblaApi.scrollPrev();
  }, [emblaApi]);

  const scrollNext = useCallback(() => {
    if (emblaApi) emblaApi.scrollNext();
  }, [emblaApi]);

  return (
    <section className="py-20 bg-gray-50">
      <div className="container mx-auto px-4">
        <h2 className="text-3xl font-bold text-center mb-12">
          –û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö —Å–ª—É—à–∞—Ç–µ–ª–µ–π
        </h2>

        <div className="relative">
          <div className="overflow-hidden" ref={emblaRef}>
            <div className="flex">
              {testimonials.map((testimonial, index) => (
                <div key={index} className="flex-[0_0_100%] min-w-0 px-4">
                  <div className="bg-white rounded-lg shadow-lg p-6 h-full max-w-2xl mx-auto">
                    <div className="flex items-center mb-4">
                      <div className="relative w-16 h-16 rounded-full overflow-hidden mr-4">
                        <Image
                          src={`/images/testimonials/${testimonial.profilePicture}`}
                          alt={testimonial.author}
                          fill
                          className="object-cover"
                        />
                      </div>
                      <div>
                        <h3 className="font-semibold text-lg">
                          {testimonial.author}
                        </h3>
                        <a
                          href={`https://t.me/${testimonial.telegram.slice(1)}`}
                          target="_blank"
                          rel="noopener noreferrer"
                          className="text-blue-600 hover:text-blue-800"
                        >
                          {testimonial.telegram}
                        </a>
                      </div>
                    </div>
                    <p className="text-gray-600">{testimonial.text}</p>
                  </div>
                </div>
              ))}
            </div>
          </div>

          <button
            className="absolute left-0 top-1/2 -translate-y-1/2 -translate-x-4 bg-white rounded-full p-2 shadow-lg hover:bg-gray-100"
            onClick={scrollPrev}
          >
            <svg
              className="w-6 h-6"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
                d="M15 19l-7-7 7-7"
              />
            </svg>
          </button>

          <button
            className="absolute right-0 top-1/2 -translate-y-1/2 translate-x-4 bg-white rounded-full p-2 shadow-lg hover:bg-gray-100"
            onClick={scrollNext}
          >
            <svg
              className="w-6 h-6"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
                d="M9 5l7 7-7 7"
              />
            </svg>
          </button>
        </div>
      </div>
    </section>
  );
}
